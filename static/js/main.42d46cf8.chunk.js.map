{"version":3,"sources":["fonts/KrinkesDecorPERSONAL.ttf","fonts/PlayfairDisplay-RegularItalic.ttf","StyledComponents/GlobalStyle.js","StyledComponents/SocialMedia.js","StyledComponents/StyledHeader.js","layout/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","GlobalStyle","createGlobalStyle","_templateObject","Krinkes","PlayfairDisplay","Container","styled","div","_templateObject2","SocialMediaContainer","SocialMedia_templateObject","SocialMediaButton","a","SocialMedia_templateObject2","props","color","StyledHeader","header","StyledHeader_templateObject","TopBar","StyledHeader_templateObject2","Button","button","_templateObject3","Menu","_templateObject4","Title","h1","_templateObject5","Header","react_default","createElement","react_fontawesome_index_es","icon","href","rel","target","library","add","faPhoneAlt","faFacebookF","faTwitter","faPinterest","faInstagram","Boolean","window","location","hostname","match","ReactDOM","render","className","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4uBCIjC,IAAMC,EAAcC,YAAHC,IAGTC,IAKAC,KAiBFC,EAAYC,IAAOC,IAAVC,icC3Bf,IAAMC,EAAuBH,IAAOC,IAAVG,KAMpBC,EAAoBL,IAAOM,EAAVC,IACN,SAAAC,GAAK,OAAIA,EAAMC,OAAS,SAUnC,SAAAD,GAAK,OAAIA,EAAMC,OAAS,mxCCjB9B,IAAMC,EAAeV,IAAOW,OAAVC,KAMZC,EAASb,IAAOC,IAAVa,KAmBNC,EAASf,IAAOgB,OAAVC,KASNC,EAAOlB,IAAOC,IAAVkB,KAsBJC,EAAQpB,IAAOqB,GAAVC,KClDH,SAASC,IACtB,OACEC,EAAAlB,EAAAmB,cAACf,EAAD,KACEc,EAAAlB,EAAAmB,cAACZ,EAAD,KACEW,EAAAlB,EAAAmB,cAAA,WACED,EAAAlB,EAAAmB,cAACC,EAAA,EAAD,CAAiBC,KAAK,cACtBH,EAAAlB,EAAAmB,cAAA,kCAEFD,EAAAlB,EAAAmB,cAAA,WACED,EAAAlB,EAAAmB,cAAA,8BACAD,EAAAlB,EAAAmB,cAACV,EAAD,mBACAS,EAAAlB,EAAAmB,cAACV,EAAD,oBACAS,EAAAlB,EAAAmB,cAACV,EAAD,gBAGJS,EAAAlB,EAAAmB,cAACP,EAAD,KACEM,EAAAlB,EAAAmB,cAAA,WACED,EAAAlB,EAAAmB,cAAA,UACED,EAAAlB,EAAAmB,cAAA,kBACAD,EAAAlB,EAAAmB,cAAA,qBACAD,EAAAlB,EAAAmB,cAAA,wBACAD,EAAAlB,EAAAmB,cAAA,qBAGJD,EAAAlB,EAAAmB,cAACL,EAAD,eACAI,EAAAlB,EAAAmB,cAACtB,EAAD,KACEqB,EAAAlB,EAAAmB,cAACpB,EAAD,CACEuB,KAAK,2BACLC,IAAI,sBACJC,OAAO,SACPrB,MAAO,WAEPe,EAAAlB,EAAAmB,cAACC,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,iBAEjCH,EAAAlB,EAAAmB,cAACpB,EAAD,CACEuB,KAAK,0BACLC,IAAI,sBACJC,OAAO,SACPrB,MAAO,WAEPe,EAAAlB,EAAAmB,cAACC,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,cAEjCH,EAAAlB,EAAAmB,cAACpB,EAAD,CACEuB,KAAK,6BACLC,IAAI,sBACJC,OAAO,SACPrB,MAAO,WAEPe,EAAAlB,EAAAmB,cAACC,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,gBAEjCH,EAAAlB,EAAAmB,cAACpB,EAAD,CACEuB,KAAK,4BACLC,IAAI,sBACJC,OAAO,SACPrB,MAAO,WAEPe,EAAAlB,EAAAmB,cAACC,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,mBCpD3CI,IAAQC,IAAIC,IAAYC,IAAaC,IAAWC,IAAaC,KCAzCC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOpB,EAAAlB,EAAAmB,cFSD,WACb,OACED,EAAAlB,EAAAmB,cAAC1B,EAAD,CAAW8C,UAAU,OACnBrB,EAAAlB,EAAAmB,cAAC/B,EAAD,MACA8B,EAAAlB,EAAAmB,cAACF,EAAD,QEbU,MAASuB,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.42d46cf8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/KrinkesDecorPERSONAL.4027bc45.ttf\";","module.exports = __webpack_public_path__ + \"static/media/PlayfairDisplay-RegularItalic.9030fe95.ttf\";","import styled, { createGlobalStyle } from 'styled-components';\nimport Krinkes from '../fonts/KrinkesDecorPERSONAL.ttf';\nimport PlayfairDisplay from '../fonts/PlayfairDisplay-RegularItalic.ttf';\n\nexport const GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: 'Krinkes';\n    src: url(${Krinkes});\n  }\n\n  @font-face {\n    font-family: 'PlayFairDisplay';\n    src: url(${PlayfairDisplay});\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n\n  html, body, .container {\n    min-height: 100vh;\n  }\n\n  body {  \n    padding: 0;\n    margin: 0;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  width: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const SocialMediaContainer = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n`;\n\nexport const SocialMediaButton = styled.a`\n  border: 2.5px solid ${props => props.color || \"black\"};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 100%;\n  width: 3rem;\n  height: 3rem\n  margin: 0.5rem;\n  font-size: 1.25rem;\n  & svg {\n    color: ${props => props.color || \"black\"};\n  }\n`;","import styled from 'styled-components';\n\nexport const StyledHeader = styled.header`\n  display: flex;\n  flex-flow: column wrap;\n  width: 100%;\n`;\n\nexport const TopBar = styled.div`\n  background: rgba(240,240,240);\n  height: 3rem;\n  width: 100%;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n  align-items: center;\n\n  & > div {\n    margin: 0 5rem;\n  }\n\n  & span {\n    font: 1rem system-ui;\n    padding: 0 2rem;\n  }\n`;\n\nexport const Button = styled.button`\n  border: none;\n  border-left: 1px solid black;\n  background: rgba(240,240,240);\n  font-size: 1rem;\n  outline: none;\n  padding: 0 2rem;\n`;\n\nexport const Menu = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0 5rem;\n  height: 8rem;\n  & ul {\n    display: flex;\n    flex-flow: row wrap;\n    padding: 0; \n    & li {\n      list-style: none;\n      font-family: 'PlayfairDisplay';\n      font-size: 1.5rem;\n    }\n    & li:not(:last-child) {\n      margin-right: 2rem;\n    }\n  }\n`;\n\nexport const Title = styled.h1`\n  font-family: 'Krinkes';\n  font-size: 5rem;\n  margin: 1rem 0;\n`;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { SocialMediaContainer, SocialMediaButton } \n  from '../StyledComponents/SocialMedia';\nimport { StyledHeader, TopBar, Button, Menu, Title } \n  from '../StyledComponents/StyledHeader';\n\nexport default function Header() {\n  return (\n    <StyledHeader>\n      <TopBar>\n        <div>\n          <FontAwesomeIcon icon=\"phone-alt\" />\n          <span>Call +06-31950040</span>\n        </div>\n        <div>\n          <span>Welcome Hulio!</span>\n          <Button>My Account</Button>\n          <Button>My Wishlist</Button>\n          <Button>Login</Button>\n        </div>\n      </TopBar>\n      <Menu>\n        <div>\n          <ul>\n            <li>Home</li>\n            <li>Gallery</li>\n            <li>Categories</li>\n            <li>Pages</li>\n          </ul>\n        </div>\n        <Title>Sophia</Title>\n        <SocialMediaContainer>\n          <SocialMediaButton \n            href=\"https://www.facebook.com\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            color={'#d9bf8f'}\n          >\n            <FontAwesomeIcon icon={[\"fab\", \"facebook-f\"]} />\n          </SocialMediaButton>\n          <SocialMediaButton \n            href=\"https://www.twitter.com\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            color={'#d9bf8f'}\n          >\n            <FontAwesomeIcon icon={[\"fab\", \"twitter\"]} />\n          </SocialMediaButton>\n          <SocialMediaButton \n            href=\"https://wwww.pinterest.com\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            color={'#d9bf8f'}\n          >\n            <FontAwesomeIcon icon={[\"fab\", \"pinterest\"]} />\n          </SocialMediaButton>\n          <SocialMediaButton \n            href=\"https://www.instagram.com\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            color={'#d9bf8f'}\n          >\n            <FontAwesomeIcon icon={[\"fab\", \"instagram\"]} />\n          </SocialMediaButton>          \n        </SocialMediaContainer>\n      </Menu>\n    </StyledHeader>\n  );\n};","import React from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faPhoneAlt } \n  from '@fortawesome/free-solid-svg-icons';\nimport { faFacebookF, faTwitter, faPinterest, faInstagram } \n  from '@fortawesome/free-brands-svg-icons';\n\nimport { GlobalStyle, Container } \n  from './StyledComponents/GlobalStyle';\n\nimport Header from './layout/Header';\n\nlibrary.add(faPhoneAlt, faFacebookF, faTwitter, faPinterest, faInstagram);\n\nexport default function App() {\n  return (\n    <Container className=\"App\">\n      <GlobalStyle />\n      <Header />\n    </Container>\n  );\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}